{"ast":null,"code":"var _jsxFileName = \"/home/ashraf/Desktop/contact-list-release2/src/components/ContactItem/ContactItem.js\";\nimport React, { Component } from 'react';\nimport { Wrapper, DeleteBtn, Card, Details, ContactDetails, ContactImage, ContactName } from \"./ContactItemStyle\";\nimport DetailsModal from \"../DetailsModal/DetailsModal\";\nimport DeleteModal from \"../DeleteModal/DeleteModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass ContactItem extends Component {\n  // To implement the swipe functionality, need a direct reference to the DOM element.\n  // Save a reference by using the ref attribute\n  // listElement;\n  // deleteElement;\n  // listElement = null;\n  // deleteElement = null;\n  constructor(props) {\n    super(props);\n\n    this.onDragStart = x => {\n      this.setState({\n        isDragged: true,\n        startX: x\n      });\n      this.startTime = Date.now(); //use requestAnimationFrame(callback) to tell the browser to perform an animation\n      //it requests that the browser calls a specified function to update an animation\n\n      requestAnimationFrame(this.updatePosition);\n    };\n\n    this.onDragEnd = () => {\n      if (this.state.isDragged) {\n        this.setState({\n          isDragged: false\n        });\n\n        if (this.state.left < -66) {\n          if (!this.state.isSwiped) {\n            // this.deleteElement.style.transform = `translateX(${0}px)`;\n            this.setState({\n              left: -66,\n              isSwiped: true\n            }, () => {// this.listElement.style.transform = `translateX(${0}px)`;\n            });\n          }\n        } else {\n          if (!this.state.isSwiped) {\n            this.setState({\n              left: 0\n            }); // this.listElement.style.transform = `translateX(${this.state.left}px)`;\n          }\n        }\n      }\n    };\n\n    this.onDragStartMouse = e => {\n      this.onDragStart(e.clientX);\n      window.addEventListener(\"mousemove\", this.onMouseMove);\n    };\n\n    this.onDragEndMouse = e => {\n      window.removeEventListener(\"mousemove\", this.onMouseMove);\n      this.onDragEnd();\n    };\n\n    this.onDragStartTouch = e => {\n      const touch = e.targetTouches[0];\n      this.onDragStart(touch.clientX);\n      window.addEventListener(\"touchmove\", this.onTouchMove);\n    };\n\n    this.onDragEndTouch = e => {\n      window.removeEventListener(\"touchmove\", this.onTouchMove);\n      this.onDragEnd();\n    };\n\n    this.onMouseMove = e => {\n      const left = e.clientX - this.state.startX;\n\n      if (left < 0) {\n        this.setState({\n          left: left\n        });\n      }\n    };\n\n    this.onTouchMove = e => {\n      const touch = e.targetTouches[0];\n      const left = touch.clientX - this.state.startX;\n\n      if (left < 0) {\n        this.setState({\n          left: left\n        });\n      }\n    };\n\n    this.updatePosition = () => {\n      if (this.state.isDragged) {\n        requestAnimationFrame(this.updatePosition);\n      }\n\n      const time = Date.now();\n      const elapsedTime = time - this.startTime;\n\n      if (this.state.isDragged && elapsedTime > 1000 / 60) {\n        // this.listElement.style.transform = `translateX(${this.state.left}px)`;\n        // this.deleteElement.style.transform = `translateX(${this.state.left}px)`;\n        this.startTime = Date.now();\n      }\n    };\n\n    this.showDetails = () => {\n      this.setState({\n        isToggleOn: !this.state.isToggleOn\n      });\n    };\n\n    this.state = {\n      isDragged: false,\n      isToggleOn: false,\n      isSwiped: false,\n      isDeleted: false,\n      startX: 0,\n      left: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.onDragEndMouse);\n    window.addEventListener(\"touchend\", this.onDragEndTouch);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.onDragEndMouse); // window.removeEventListener(\"touchend\".this.onDragEndTouch);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.isToggleOn && React.createElement(DetailsModal, {\n      contact: this.props.contact,\n      isToggleOn: this.state.isToggleOn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Card // ref = {div => {this.listElement = div}}\n    , {\n      status: this.state.isSwiped,\n      onDoubleClick: this.showDetails,\n      onMouseDown: this.onDragStartMouse,\n      onTouchStart: this.onDragStartTouch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(ContactImage, {\n      src: this.props.contact.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(ContactName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.props.contact.first_name, \" \", this.props.contact.last_name), React.createElement(ContactDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.props.contact.phone), React.createElement(ContactDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.props.contact.company))), React.createElement(DeleteBtn, {\n      style: {\n        color: \"#ce363c\",\n        fontSize: \"24px\"\n      } // ref = {div => (this.deleteElement = div)} \n      ,\n      onClick: () => {\n        this.props.onDeleteContact();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), true && React.createElement(DeleteModal, {\n      isDeleted: this.state.isDeleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ContactItem;","map":{"version":3,"sources":["/home/ashraf/Desktop/contact-list-release2/src/components/ContactItem/ContactItem.js"],"names":["React","Component","Wrapper","DeleteBtn","Card","Details","ContactDetails","ContactImage","ContactName","DetailsModal","DeleteModal","FontAwesomeIcon","faTrash","ContactItem","constructor","props","onDragStart","x","setState","isDragged","startX","startTime","Date","now","requestAnimationFrame","updatePosition","onDragEnd","state","left","isSwiped","onDragStartMouse","e","clientX","window","addEventListener","onMouseMove","onDragEndMouse","removeEventListener","onDragStartTouch","touch","targetTouches","onTouchMove","onDragEndTouch","time","elapsedTime","showDetails","isToggleOn","isDeleted","componentDidMount","componentWillUnmount","render","contact","image_url","first_name","last_name","phone","company","color","fontSize","onDeleteContact"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4CC,cAA5C,EAA4DC,YAA5D,EAA0EC,WAA1E,QAA6F,oBAA7F;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;;AAGA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAChC;AACA;AACA;AACA;AAEA;AACA;AAEAa,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBlBC,WAtBkB,GAsBHC,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAE,IAAZ;AAAkBC,QAAAA,MAAM,EAAEH;AAA1B,OAAd;AACA,WAAKI,SAAL,GAAiBC,IAAI,CAACC,GAAL,EAAjB,CAFiB,CAGjB;AACA;;AACAC,MAAAA,qBAAqB,CAAC,KAAKC,cAAN,CAArB;AACH,KA5BiB;;AAAA,SA8BlBC,SA9BkB,GA8BN,MAAM;AACd,UAAG,KAAKC,KAAL,CAAWR,SAAd,EAAwB;AACpB,aAAKD,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAd;;AACA,YAAG,KAAKQ,KAAL,CAAWC,IAAX,GAAkB,CAAC,EAAtB,EAAyB;AACrB,cAAG,CAAC,KAAKD,KAAL,CAAWE,QAAf,EAAwB;AACpB;AACA,iBAAKX,QAAL,CAAc;AAACU,cAAAA,IAAI,EAAE,CAAC,EAAR;AAAWC,cAAAA,QAAQ,EAAE;AAArB,aAAd,EAAyC,MAAI,CACzC;AACH,aAFD;AAGH;AACJ,SAPD,MAOO;AACH,cAAG,CAAC,KAAKF,KAAL,CAAWE,QAAf,EAAwB;AACpB,iBAAKX,QAAL,CAAc;AAACU,cAAAA,IAAI,EAAC;AAAN,aAAd,EADoB,CAEpB;AACH;AACJ;AACJ;AACJ,KA/CiB;;AAAA,SAiDlBE,gBAjDkB,GAiDEC,CAAD,IAAO;AACtB,WAAKf,WAAL,CAAiBe,CAAC,CAACC,OAAnB;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAoC,KAAKC,WAAzC;AACH,KApDiB;;AAAA,SAsDlBC,cAtDkB,GAsDAL,CAAD,IAAO;AACpBE,MAAAA,MAAM,CAACI,mBAAP,CAA2B,WAA3B,EAAuC,KAAKF,WAA5C;AACA,WAAKT,SAAL;AACH,KAzDiB;;AAAA,SA2DlBY,gBA3DkB,GA2DEP,CAAD,IAAO;AACtB,YAAMQ,KAAK,GAAGR,CAAC,CAACS,aAAF,CAAgB,CAAhB,CAAd;AACA,WAAKxB,WAAL,CAAiBuB,KAAK,CAACP,OAAvB;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAoC,KAAKO,WAAzC;AACH,KA/DiB;;AAAA,SAiElBC,cAjEkB,GAiEAX,CAAD,IAAO;AACpBE,MAAAA,MAAM,CAACI,mBAAP,CAA2B,WAA3B,EAAuC,KAAKI,WAA5C;AACA,WAAKf,SAAL;AACH,KApEiB;;AAAA,SAsElBS,WAtEkB,GAsEHJ,CAAD,IAAO;AACjB,YAAMH,IAAI,GAAGG,CAAC,CAACC,OAAF,GAAY,KAAKL,KAAL,CAAWP,MAApC;;AACA,UAAGQ,IAAI,GAAC,CAAR,EAAU;AACN,aAAKV,QAAL,CAAc;AAACU,UAAAA,IAAI,EAAEA;AAAP,SAAd;AACH;AACJ,KA3EiB;;AAAA,SA6ElBa,WA7EkB,GA6EHV,CAAD,IAAO;AACjB,YAAMQ,KAAK,GAAGR,CAAC,CAACS,aAAF,CAAgB,CAAhB,CAAd;AACA,YAAMZ,IAAI,GAAGW,KAAK,CAACP,OAAN,GAAgB,KAAKL,KAAL,CAAWP,MAAxC;;AACA,UAAGQ,IAAI,GAAC,CAAR,EAAU;AACN,aAAKV,QAAL,CAAc;AAACU,UAAAA,IAAI,EAAEA;AAAP,SAAd;AACH;AACJ,KAnFiB;;AAAA,SAqFlBH,cArFkB,GAqFD,MAAM;AACnB,UAAG,KAAKE,KAAL,CAAWR,SAAd,EAAyB;AACrBK,QAAAA,qBAAqB,CAAC,KAAKC,cAAN,CAArB;AACH;;AAED,YAAMkB,IAAI,GAAGrB,IAAI,CAACC,GAAL,EAAb;AACA,YAAMqB,WAAW,GAAGD,IAAI,GAAG,KAAKtB,SAAhC;;AAEA,UAAG,KAAKM,KAAL,CAAWR,SAAX,IAAyByB,WAAW,GAAG,OAAK,EAA/C,EAAoD;AAChD;AACA;AACA,aAAKvB,SAAL,GAAiBC,IAAI,CAACC,GAAL,EAAjB;AACH;AACJ,KAlGiB;;AAAA,SAoGlBsB,WApGkB,GAoGJ,MAAM;AAChB,WAAK3B,QAAL,CAAc;AAAC4B,QAAAA,UAAU,EAAE,CAAC,KAAKnB,KAAL,CAAWmB;AAAzB,OAAd;AACH,KAtGiB;;AAEd,SAAKnB,KAAL,GAAa;AACTR,MAAAA,SAAS,EAAE,KADF;AAET2B,MAAAA,UAAU,EAAE,KAFH;AAGTjB,MAAAA,QAAQ,EAAE,KAHD;AAITkB,MAAAA,SAAS,EAAE,KAJF;AAKT3B,MAAAA,MAAM,EAAE,CALC;AAMTQ,MAAAA,IAAI,EAAE;AANG,KAAb;AAQH;;AAEDoB,EAAAA,iBAAiB,GAAG;AAChBf,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKE,cAAxC;AACAH,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC,KAAKQ,cAAzC;AACH;;AAEDO,EAAAA,oBAAoB,GAAG;AACnBhB,IAAAA,MAAM,CAACI,mBAAP,CAA2B,SAA3B,EAAsC,KAAKD,cAA3C,EADmB,CAEnB;AACH;;AAqFDc,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKvB,KAAL,CAAWmB,UAAX,IAAyB,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAK/B,KAAL,CAAWoC,OAAlC;AAA2C,MAAA,UAAU,EAAE,KAAKxB,KAAL,CAAWmB,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFjC,EAII,oBAAC,IAAD,CACI;AADJ;AAEI,MAAA,MAAM,EAAI,KAAKnB,KAAL,CAAWE,QAFzB;AAGI,MAAA,aAAa,EAAI,KAAKgB,WAH1B;AAII,MAAA,WAAW,EAAI,KAAKf,gBAJxB;AAKI,MAAA,YAAY,EAAI,KAAKQ,gBALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWoC,OAAX,CAAmBC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKrC,KAAL,CAAWoC,OAAX,CAAmBE,UAAjC,OAA8C,KAAKtC,KAAL,CAAWoC,OAAX,CAAmBG,SAAjE,CADJ,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKvC,KAAL,CAAWoC,OAAX,CAAmBI,KAApC,CAFJ,EAGI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKxC,KAAL,CAAWoC,OAAX,CAAmBK,OAApC,CAHJ,CARJ,CAJJ,EAmBI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,SAAP;AAAiBC,QAAAA,QAAQ,EAAE;AAA3B,OADX,CAEI;AAFJ;AAGI,MAAA,OAAO,EAAE,MAAK;AACV,aAAK3C,KAAL,CAAW4C,eAAX;AACH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE/C,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAnBJ,EA6BQ,QAAQ,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,KAAKe,KAAL,CAAWoB,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BhB,CADJ;AAkCH;;AArJ+B;;AAwJpC,eAAelC,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Wrapper, DeleteBtn, Card, Details, ContactDetails, ContactImage, ContactName } from \"./ContactItemStyle\";\nimport DetailsModal from \"../DetailsModal/DetailsModal\";\nimport DeleteModal from \"../DeleteModal/DeleteModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass ContactItem extends Component {\n    // To implement the swipe functionality, need a direct reference to the DOM element.\n    // Save a reference by using the ref attribute\n    // listElement;\n    // deleteElement;\n    startTime;\n    // listElement = null;\n    // deleteElement = null;\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            isDragged: false,\n            isToggleOn: false,\n            isSwiped: false,\n            isDeleted: false,\n            startX: 0,\n            left: 0,\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.onDragEndMouse);\n        window.addEventListener(\"touchend\", this.onDragEndTouch);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.onDragEndMouse);\n        // window.removeEventListener(\"touchend\".this.onDragEndTouch);\n    }\n\n    onDragStart = (x) => {\n        this.setState({isDragged: true, startX: x});\n        this.startTime = Date.now();\n        //use requestAnimationFrame(callback) to tell the browser to perform an animation\n        //it requests that the browser calls a specified function to update an animation\n        requestAnimationFrame(this.updatePosition);\n    }\n\n    onDragEnd = () => {\n        if(this.state.isDragged){\n            this.setState({isDragged: false});\n            if(this.state.left < -66){\n                if(!this.state.isSwiped){\n                    // this.deleteElement.style.transform = `translateX(${0}px)`;\n                    this.setState({left: -66,isSwiped: true},()=>{\n                        // this.listElement.style.transform = `translateX(${0}px)`;\n                    });\n                }\n            } else {\n                if(!this.state.isSwiped){\n                    this.setState({left:0});\n                    // this.listElement.style.transform = `translateX(${this.state.left}px)`;\n                }\n            }\n        }\n    }\n\n    onDragStartMouse = (e) => {\n        this.onDragStart(e.clientX);\n        window.addEventListener(\"mousemove\",this.onMouseMove);\n    }\n\n    onDragEndMouse = (e) => {\n        window.removeEventListener(\"mousemove\",this.onMouseMove);\n        this.onDragEnd();\n    }\n\n    onDragStartTouch = (e) => {\n        const touch = e.targetTouches[0];\n        this.onDragStart(touch.clientX);\n        window.addEventListener(\"touchmove\",this.onTouchMove);\n    }\n\n    onDragEndTouch = (e) => {\n        window.removeEventListener(\"touchmove\",this.onTouchMove);\n        this.onDragEnd();\n    }\n\n    onMouseMove = (e) => {\n        const left = e.clientX - this.state.startX;\n        if(left<0){\n            this.setState({left: left});\n        }\n    }\n\n    onTouchMove = (e) => {\n        const touch = e.targetTouches[0];\n        const left = touch.clientX - this.state.startX;\n        if(left<0){\n            this.setState({left: left});\n        }\n    }\n\n    updatePosition = () => {\n        if(this.state.isDragged) {\n            requestAnimationFrame(this.updatePosition);\n        }\n\n        const time = Date.now();\n        const elapsedTime = time - this.startTime; \n\n        if(this.state.isDragged && (elapsedTime > 1000/60)) {\n            // this.listElement.style.transform = `translateX(${this.state.left}px)`;\n            // this.deleteElement.style.transform = `translateX(${this.state.left}px)`;\n            this.startTime = Date.now();\n        }\n    }\n\n    showDetails = () => {\n        this.setState({isToggleOn: !this.state.isToggleOn});\n    }\n    \n    \n    render() {\n        return (\n            <Wrapper>\n                {\n                    this.state.isToggleOn && <DetailsModal contact={this.props.contact} isToggleOn={this.state.isToggleOn}></DetailsModal>\n                }\n                <Card\n                    // ref = {div => {this.listElement = div}}\n                    status = {this.state.isSwiped}\n                    onDoubleClick = {this.showDetails}\n                    onMouseDown = {this.onDragStartMouse}\n                    onTouchStart = {this.onDragStartTouch}\n                >\n                    <ContactImage src={this.props.contact.image_url}></ContactImage>    \n                    <Details>\n                        <ContactName>{this.props.contact.first_name} {this.props.contact.last_name}</ContactName>\n                        <ContactDetails>{this.props.contact.phone}</ContactDetails>\n                        <ContactDetails>{this.props.contact.company}</ContactDetails>                            \n                    </Details>\n                </Card>\n\n                <DeleteBtn\n                    style={{color:\"#ce363c\",fontSize: \"24px\"}}\n                    // ref = {div => (this.deleteElement = div)} \n                    onClick={()=> {\n                        this.props.onDeleteContact();\n                    }}\n                >\n                    <FontAwesomeIcon icon={faTrash}/>\n                </DeleteBtn>\n                {\n                    true && <DeleteModal isDeleted={this.state.isDeleted}></DeleteModal>\n                }\n            </Wrapper>\n        );\n    }\n}\n\nexport default ContactItem;"]},"metadata":{},"sourceType":"module"}