{"version":3,"sources":["globalStyle/colorCode.js","components/MockUp/MockUpStyle.js","components/ContactItem/ContactItemStyle.js","components/DetailsModal/DetailsModalStyle.js","components/DetailsModal/DetailsModal.js","components/DeleteModal/DeleteModal.js","components/ContactItem/ContactItem.js","components/ContactList/ContactListStyle.js","components/ContactList/ContactList.js","components/MockUp/MockUp.js","App.js","reducers/reducer.js","reducers/index.js","actions/action_types.js","actions/index.js","serviceWorker.js","index.js"],"names":["color5","Iphonex","styled","div","Wrapper","Title","Span","span","DeleteBtn","BorderBottom","Card","props","status","ContactImage","img","src","Details","ContactName","ContactDetails","CardInfo","Background","Title1","h1","Title2","IconShape","DetailsModal","Fragment","Modal","size","show","this","showDetailsFlag","onHide","handleDetailsModal","contact","image_url","first_name","last_name","gender","icon","faMale","faFemale","faBriefcase","company","faPhone","phone","faAt","email","Button","variant","onClick","Component","DeleteModal","confirmDeleteFlag","handleDeleteModal","Header","closeButton","Body","Footer","removeContact","ContactItem","onDragStart","x","setState","isDragged","startX","onDragEnd","state","left","isSwiped","onDragStartMouse","e","clientX","window","addEventListener","onMouseMove","onDragEndMouse","removeEventListener","onDragStartTouch","touch","targetTouches","onTouchMove","onDragEndTouch","onDeleteContact","onDoubleClick","onMouseDown","onTouchStart","faTrash","ListWrapper","List","ContactList","id","newContacts","Array","prototype","filter","call","arr","index","nextProps","contacts","map","key","MockUp","useSelector","App","initialState","combineReducers","action","type","is_deleted","apiUrl","fetchContactsSuccess","Boolean","location","hostname","match","store","createStore","rootReducer","applyMiddleware","thunk","dispatch","axios","get","then","response","data","catch","error","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01f6258e.chunk.js","sourcesContent":["export const color1 = \"#fff\";\nexport const color2 = \"#000000\";\nexport const color3 = \"#191919\";\nexport const color4 = \"#111\";\nexport const color5 = \"rgb(68, 131, 224)\";\nexport const color6 = \"rgb(238, 236, 236)\";\nexport const color7 = \"#878787\";","import styled from \"styled-components\";\nimport { color1,color2, color3, color4, color5 } from \"../../globalStyle/colorCode\";\nexport const Iphonex = styled.div`\n  position: relative;\n  margin: 5% auto;\n  width: 375px;\n  height: 812px;\n  max-height: 812px;\n  background-color: ${color1};\n  border-radius: 35px;\n  box-shadow: 0px 0px 0px 11px ${color2}, 0px 0px 0px 13px ${color3}, 0px 0px 0px 20px ${color4};\n  &:before,\n  &:after{\n    content: '';\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  &:before {\n    top: 0px;\n    width: 56%;\n    height: 30px;\n    background-color: ${color2};\n    border-radius: 0px 0px 40px 40px;\n  }\n\n  // remove text highlight when mouse is clicked and dragged\n  -webkit-user-select: none;\n`\n\nexport const Wrapper = styled.div`\n  padding-left: 20px;\n  padding-bottom: 8px;\n`\n\nexport const Title = styled.div`\n  color: ${color5};\n  height: 80px;\n  font-size: 1.6em;\n  padding: 0px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n`\n\nexport const Span = styled.span`\n  margin-left: 10px;\n  font-family: \"Times New Roman\", Times, serif;\n`","import styled from 'styled-components';\nimport { color1, color6, color5, color7, color2 } from '../../globalStyle/colorCode';\n\nexport const Wrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    flex-wrap: nowrap;\n    overflow: hidden;\n`\n\nexport const DeleteBtn = styled.div`\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    height: 60px;\n    background-color: ${color6};\n    box-sizing: border-box;\n    margin-bottom: 12px;\n    border-radius: 10px;\n    width: 18%;\n    min-width: 18%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${color5};\n    font-size: 24px;\n\n\n    &:hover{\n        -webkit-transform: scale(1.03);\n        -ms-transform: scale(1.03);\n        transform: scale(1.03);\n        transition: 0.3s ease;\n        box-shadow: 3px 3px 3px ${color7};\n    }\n`\n\nexport const BorderBottom = styled.div`\n    border-bottom: 1px solid ${color2};\n    position: absolute;\n    left: 10%;\n    margin: auto;\n    width: 80%;\n    bottom: 0;\n`\n\nexport const Card = styled.div`\n    width: ${props => props.status ? \"76%\" : \"96%\"};\n    min-width: ${props => props.status ? \"76%\" : \"96%\"};\n    margin-right: 2.1%;\n    margin-left: 2%;\n    height: 100px;\n    margin-bottom:12px;\n    border-radius: 15px;\n    background-color: ${color1};\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 10px 8px;\n    position: relative;\n\n    &:hover{\n        -webkit-transform: scale(1.03);\n        -ms-transform: scale(1.03);\n        transform: scale(1.03);\n        transition: 0.3s ease;\n        box-shadow: 3px 3px 3px ${color7};\n    }\n\n    &:hover ${BorderBottom}{\n        transition: 0.3s ease;\n        width: 0%;\n        left: 0%;\n    }\n`\n\nexport const ContactImage = styled.img`\n    src: \"${props => props.src}\";\n    border-radius: 50%;\n    height: 80px;\n    width: 80px;\n`\n\nexport const Details = styled.div`\n    margin-left: 10px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`\n\nexport const ContactName = styled.div`\n    color: ${color2};\n    font-size: 17px;\n    font-style: oblique;\n`\n\nexport const ContactDetails = styled.div`\n    color: ${color7};\n    font-size: 13px;\n`","import styled from \"styled-components\";\nimport { color5, color1, color2 } from \"../../globalStyle/colorCode\";\n\nexport const CardInfo = styled.div`\n    height: 400px;\n    width: 100%;\n    position: relative;\n`\n\nexport const Background = styled.div`\n    height: 50%;\n    width: 100%;\n    background-image: url(https://unsplash.imgix.net/45/ZLSw0SXxThSrkXRIiCdT_DSC_0345.jpg?q=75&w=1080&h=1080&fit=max&fm=jpg&auto=format&s=857f07b76abac23a7fb7161cc7b12a46);\n    background-size: cover;\n`\n\nexport const ContactImage = styled.img`\n    src: \"${props => props.src}\";\n    width: 114px;\n    height: 114px;\n    top: 50%;\n    left: 50%;\n    margin: -77px 0 0 -57px;\n    border-radius: 100%;\n    background-size: contain;\n    position: absolute;\n    z-index: 1;\n\n    &:hover{\n        -webkit-transform: scale(1.06);\n        -ms-transform: scale(1.06);\n        transform: scale(1.06);\n        transition: 0.3s ease;\n    }\n`\n\nexport const ContactDetails = styled.div`\n    height: 50%;\n    width: 100%;\n    position: absolute;\n    background-color: ${color1};\n    padding-top: 40px;\n    text-align: center;\n    color: ${color2};\n    font-family: \"Times New Roman\", Times, serif;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n`\n\nexport const Title1 = styled.h1`\n    font-size: 1em;\n    margin-bottom: 20px;\n    font-weight: bold;\n    font-style: oblique;\n`\n\nexport const Title2 = styled.h1`\n    font-size: 0.8em;\n    margin-bottom: 10px;\n`\n\nexport const IconShape = styled.div`\n    display: inline;\n    color: ${color5};\n`","// this modal is to show each contact details if the card is double clicked\n\nimport React, { Component } from 'react';\nimport { Card, Button, Modal } from 'react-bootstrap';\nimport { CardInfo, Background, ContactImage, ContactDetails, Title1, Title2, IconShape } from \"./DetailsModalStyle\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMale, faFemale, faPhone, faAt, faBriefcase } from '@fortawesome/free-solid-svg-icons';\n\nclass DetailsModal extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Modal size=\"sm\" show={this.props.showDetailsFlag} onHide={() => this.props.handleDetailsModal()}>\n                    <Card>\n                        <CardInfo>\n                            <Background></Background>\n                            <ContactImage src={this.props.contact.image_url}></ContactImage>\n                            <ContactDetails>\n                                <Title1>{this.props.contact.first_name} {this.props.contact.last_name}</Title1>\n                                <Title2>\n                                    <IconShape>\n                                        {\n                                            this.props.contact.gender === \"Male\" ? <FontAwesomeIcon icon={faMale} /> : <FontAwesomeIcon icon={faFemale} />\n                                        }\n                                    </IconShape> &nbsp;{this.props.contact.gender}\n                                </Title2>\n                                <Title2>\n                                    <IconShape><FontAwesomeIcon icon={faBriefcase} /></IconShape> &nbsp;{this.props.contact.company}\n                                </Title2>\n                                <Title2>\n                                    <IconShape><FontAwesomeIcon icon={faPhone} /></IconShape> &nbsp;{this.props.contact.phone}\n                                </Title2>\n                                <Title2>\n                                    <IconShape><FontAwesomeIcon icon={faAt} /></IconShape> &nbsp;{this.props.contact.email}\n                                </Title2>\n                            </ContactDetails>\n                        </CardInfo>\n                        <Button variant=\"dark\" onClick={() => this.props.handleDetailsModal()}>Ok</Button>\n                    </Card>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DetailsModal;","// this modal is to confirm a contact delete\n\nimport React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nclass DeleteModal extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Modal show={this.props.confirmDeleteFlag} onHide={() => this.props.handleDeleteModal()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Delete Contact</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to delete this contact?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => this.props.handleDeleteModal()}>\n                            No\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => this.props.removeContact()}>\n                            Yes\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DeleteModal;","import React, { Component } from 'react';\nimport { BorderBottom, Wrapper, DeleteBtn, Card, Details, ContactDetails, ContactImage, ContactName } from \"./ContactItemStyle\";\nimport DetailsModal from \"../DetailsModal/DetailsModal\";\nimport DeleteModal from \"../DeleteModal/DeleteModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass ContactItem extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            isDragged: false,            // flag to check dragging\n            showDetailsFlag: false,      // flag to check showing contact details\n            confirmDeleteFlag: false,    // flag to check deleting contact\n            isSwiped: false,             // flag to check swipping\n            startX: 0,\n            left: 0,\n        }\n    }\n\n    // The mouseup event is fired when a button (mouse or trackpad) is released while the pointer is located inside it. \n    // The touchend event is like mouseup event but (for touch screens only)\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.onDragEndMouse);\n        window.addEventListener(\"touchend\", this.onDragEndTouch);\n    }\n\n    // to control the start of the drag\n    // use requestAnimationFrame(callback) to tell the browser to perform an animation\n    // it requests that the browser calls a specified function to update an animation\n    onDragStart = (x) => {\n        this.setState({ isDragged: true, startX: x });\n    }\n\n    // to control the end of the drag\n    onDragEnd = () => {\n        if (this.state.isDragged) {\n            this.setState({ isDragged: false });\n            if (this.state.left < -66 && !this.state.isSwiped) {\n                this.setState({ left: -66, isSwiped: true });\n            } else {\n                this.setState({ left: 0, isSwiped: false });\n            }\n        }\n    }\n\n    // pass the start point of the event and pass it to onDragStart()\n    // fire mousemove event when a mouse is moved\n    onDragStartMouse = (e) => {\n        this.onDragStart(e.clientX);\n        window.addEventListener(\"mousemove\", this.onMouseMove);\n    }\n\n    // remove mousemove event when mouse is released\n    // call onDragEnd() to handle swipe\n    onDragEndMouse = (e) => {\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\n        this.onDragEnd();\n    }\n\n    // pass the start point of the event and pass it to onDragStart()\n    // fire touchmove event when touchpad is moved\n    onDragStartTouch = (e) => {\n        const touch = e.targetTouches[0];\n        this.onDragStart(touch.clientX);\n        window.addEventListener(\"touchmove\", this.onTouchMove);\n    }\n\n    // remove mousemove event when touchpad is released\n    // call onDragEnd() to handle swipe\n    onDragEndTouch = (e) => {\n        window.removeEventListener(\"touchmove\", this.onTouchMove);\n        this.onDragEnd();\n    }\n\n    // fire mousemove event when a mouse is moved while pressed\n    onMouseMove = (e) => {\n        const left = e.clientX - this.state.startX;\n        if (left < 0) {\n            this.setState({ left: left });\n        }\n    }\n\n    // fire mousemove event when touchpad is moved while pressed\n    onTouchMove = (e) => {\n        const touch = e.targetTouches[0];\n        const left = touch.clientX - this.state.startX;\n        if (left < 0) {\n            this.setState({ left: left });\n        }\n    }\n\n    // to control show and hide the Details Modal\n    handleDetailsModal = () => {\n        this.setState({ showDetailsFlag: !this.state.showDetailsFlag });\n        this.setState({ isSwiped: false });\n    }\n\n    // to control show and hide the Delete Modal\n    handleDeleteModal = () => {\n        this.setState({ confirmDeleteFlag: !this.state.confirmDeleteFlag, isSwiped: false });\n    }\n\n    // to remove a specific contact by calling onDeleteContact() from parent \n    removeContact = () => {\n        this.props.onDeleteContact();\n        this.setState({ isSwiped: false });\n        this.setState({ confirmDeleteFlag: false });\n    }\n\n\n    render() {\n        return (\n            <Wrapper>\n                {\n                    this.state.showDetailsFlag && <DetailsModal contact={this.props.contact} showDetailsFlag={this.state.showDetailsFlag} handleDetailsModal={this.handleDetailsModal}></DetailsModal>\n                }\n                <Card\n                    status={this.state.isSwiped}\n                    onDoubleClick={this.handleDetailsModal}\n                    onMouseDown={this.onDragStartMouse}\n                    onTouchStart={this.onDragStartTouch}\n                >\n                    <ContactImage src={this.props.contact.image_url}></ContactImage>\n                    <Details>\n                        <ContactName>{this.props.contact.first_name} {this.props.contact.last_name}</ContactName>\n\n                        {!this.state.isSwiped &&\n                            <>\n                                <ContactDetails>{this.props.contact.phone}</ContactDetails>\n                                <ContactDetails>{this.props.contact.company}</ContactDetails>\n                            </>\n                        }\n\n                    </Details>\n                    <BorderBottom></BorderBottom>\n                </Card>\n                <DeleteBtn onClick={this.handleDeleteModal}>\n                    <FontAwesomeIcon icon={faTrash} />\n                </DeleteBtn>\n                {\n                    this.state.confirmDeleteFlag && <DeleteModal confirmDeleteFlag={this.state.confirmDeleteFlag} handleDeleteModal={this.handleDeleteModal} removeContact={this.removeContact}></DeleteModal>\n                }\n            </Wrapper>\n        );\n    }\n}\n\nexport default ContactItem;","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n    padding-bottom: 20px;\n    padding-top: 10px;\n`\n\nexport const List = styled.div`\n    width: 100%;\n    padding: 0px 20px;\n    max-height: 700px;\n    height: 700px;\n    overflow: auto;\n    ::-webkit-scrollbar {\n        display: none;\n    }\n`","import React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, ListWrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            arr: []\n        }\n    }\n\n    // to receive the data after dispatch()\n    componentWillReceiveProps(nextProps){\n        const newContacts = [...nextProps.contacts];\n        this.setState({arr: [...newContacts]});\n    }\n\n    // to delete a specific contact with (id) passed from the child component\n    // return only 100 elements because i don't know the query params to handle the returned data from api\n    onDeleteContact = (id)=> {\n        let newContacts = Array.prototype.filter.call(this.state.arr ,(contact, index)=> {\n            if (index < 100) return contact.id !== id\n        })\n        this.setState({arr: [...newContacts]});\n    }\n\n    // return only 100 elements because i don't know the query params to handle the returned data from api\n    render() {\n        return (\n            <ListWrapper>\n                <List>\n                    {Array.prototype.map.call(this.state.arr, (contact, index) => {\n                        if (index < 100) return <ContactItem key={index} contact={contact} index={index} onDeleteContact={()=>this.onDeleteContact(contact.id)}></ContactItem>\n                    }\n                    )}\n                </List>\n            </ListWrapper>\n        );\n    }\n}\n\nexport default ContactList;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {Iphonex, Title, Span, Wrapper} from './MockUpStyle.js';\nimport ContactList from \"../ContactList/ContactList\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPhone} from '@fortawesome/free-solid-svg-icons';\n\n\nfunction MockUp(){\n    // get the data from the global store and pass it as props to the ContactList Component to display them\n    let contacts = useSelector((state)=> state.contacts);\n    return (\n        <Iphonex>\n            <Title>\n                <Wrapper>\n                <FontAwesomeIcon icon={faPhone}/>\n                <Span>Contacts</Span>\n                </Wrapper>\n            </Title>\n            <ContactList contacts={contacts}></ContactList>\n        </Iphonex>\n    );\n}\n\nexport default MockUp;","import React from 'react';\nimport './App.css';\nimport MockUp from \"./components/MockUp/MockUp\";\n\nfunction App(){\n  return (\n    <div>\n      <MockUp></MockUp>  \n    </div>\n  );\n}\n\nexport default App;\n","import { FETCH_CONTACTS, DELETE_CONTACT } from '../actions/action_types';\n\n// define the initial state that will be replaced by the new state after reducer returned\nconst initialState = {};\n\n\n// the reducer takes the previous state and the action and return new state based on the action type\nexport default function Reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CONTACTS:\n      if(action.contacts){\n        return action.contacts;  \n      }\n       else {\n        return {};\n      }\n          \n    case DELETE_CONTACT:\n      return state.filter(contact => contact.is_deleted !== 1);\n    //   return state.filter(post => post._id !== action.payload.id);\n    \n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport contacts from './reducer';\n\nexport default combineReducers({\n    contacts: contacts\n});","\n// define constants to be used in reducer\nexport const FETCH_CONTACTS = 'FETCH_CONTACTS';\nexport const DELETE_CONTACT = 'DELETE_CONTACT'","import { FETCH_CONTACTS, DELETE_CONTACT } from './action_types';\nimport axios from 'axios';\n\n// the api provided from backend\nconst apiUrl = 'https://test-be.dailymealz.app/api/json/test/users';\n\n\n// apply this method to fetch all contacts with then and catch to solve asynchronous\nexport const fetchContacts = () => {\n  return (dispatch) => {\n    return axios.get(apiUrl)\n      .then(response => {\n        dispatch(fetchContactsSuccess(response.data));\n      })\n      .catch(error => {\n        throw (error);\n      })\n  }\n}\n\nexport const fetchContactsSuccess = (contacts) => {\n  return {\n    type: FETCH_CONTACTS,\n    contacts\n  }\n}\n\n\n// apply this method to delete a specific contact using (id) with then and catch to solve asynchronous\nexport const deleteContact = id => {\n  return (dispatch) => {\n    return axios.put(`${apiUrl}/${id}`)\n      .then(response => {\n        dispatch(deleteContactSuccess(response.data))\n      })\n      .catch(error => {\n        throw (error);\n      })\n  }\n}\n\nexport const deleteContactSuccess = isDeleted => {\n  return {\n    type: DELETE_CONTACT,\n    payload: {\n      isDeleted\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport rootReducer from './reducers';\nimport { fetchContacts } from './actions/index';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n\n// create a global store to save the data retrieved from the api\n// call the dispatch function to take an action\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nstore.dispatch(fetchContacts());\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}