{"ast":null,"code":"var _jsxFileName = \"/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js\";\nimport React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, ListWrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteContact = id => {\n      console.log(\"inside delete function id=\", id);\n      let newContacts = Array.prototype.filter.call(this.state.arr, (contact, index) => {\n        return contact.id !== id; // if (index < 4) return contact.id !== id\n      });\n      this.setState({\n        arr: [...newContacts]\n      }, () => {\n        console.log(this.state.arr);\n      });\n    };\n\n    this.state = {\n      arr: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newContacts = [...nextProps.contacts];\n    this.setState({\n      arr: [...newContacts]\n    });\n  }\n\n  render() {\n    return React.createElement(ListWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, Array.prototype.map.call(this.state.arr, (contact, index) => {\n      return React.createElement(ContactItem, {\n        key: index,\n        contact: contact,\n        index: index,\n        onDeleteContact: () => this.onDeleteContact(contact.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }); // if (index < 4) return <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem>\n    })));\n  }\n\n}\n\nexport default ContactList;","map":{"version":3,"sources":["/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js"],"names":["React","Component","ContactItem","List","ListWrapper","ContactList","constructor","props","onDeleteContact","id","console","log","newContacts","Array","prototype","filter","call","state","arr","contact","index","setState","componentWillReceiveProps","nextProps","contacts","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,oBAAlC;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,eAbmB,GAaAC,EAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAAyCF,EAAzC;AACA,UAAIG,WAAW,GAAGC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4B,KAAKC,KAAL,CAAWC,GAAvC,EAA4C,CAACC,OAAD,EAAUC,KAAV,KAAmB;AAC7E,eAAOD,OAAO,CAACV,EAAR,KAAeA,EAAtB,CAD6E,CAE7E;AAEH,OAJiB,CAAlB;AAKA,WAAKY,QAAL,CAAc;AAACH,QAAAA,GAAG,EAAE,CAAC,GAAGN,WAAJ;AAAN,OAAd,EAAsC,MAAI;AAACF,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKM,KAAL,CAAWC,GAAvB;AAA4B,OAAvE;AACH,KArBkB;;AAEf,SAAKD,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAGH;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,UAAMX,WAAW,GAAG,CAAC,GAAGW,SAAS,CAACC,QAAd,CAApB;AACA,SAAKH,QAAL,CAAc;AAACH,MAAAA,GAAG,EAAE,CAAC,GAAGN,WAAJ;AAAN,KAAd;AACH;;AAaDa,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,KAAK,CAACC,SAAN,CAAgBY,GAAhB,CAAoBV,IAApB,CAAyB,KAAKC,KAAL,CAAWC,GAApC,EAAyC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1D,aAAO,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,KAAlB;AAAyB,QAAA,OAAO,EAAED,OAAlC;AAA2C,QAAA,KAAK,EAAEC,KAAlD;AAAyD,QAAA,eAAe,EAAE,MAAI,KAAKZ,eAAL,CAAqBW,OAAO,CAACV,EAA7B,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP,CAD0D,CAE1D;AACH,KAHA,CADL,CADJ,CADJ;AAWH;;AArC+B;;AAwCpC,eAAeJ,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, ListWrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            arr: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        const newContacts = [...nextProps.contacts];\n        this.setState({arr: [...newContacts]});\n    }\n\n\n    onDeleteContact = (id)=> {\n        console.log(\"inside delete function id=\",id);\n        let newContacts = Array.prototype.filter.call(this.state.arr ,(contact, index)=> {\n            return contact.id !== id\n            // if (index < 4) return contact.id !== id\n\n        })\n        this.setState({arr: [...newContacts]},()=>{console.log(this.state.arr)});\n    }\n\n    render() {\n        return (\n            <ListWrapper>\n                <List>\n                    {Array.prototype.map.call(this.state.arr, (contact, index) => {\n                        return <ContactItem key={index} contact={contact} index={index} onDeleteContact={()=>this.onDeleteContact(contact.id)}></ContactItem>\n                        // if (index < 4) return <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem>\n                    }\n                    )}\n                </List>\n            </ListWrapper>\n        );\n    }\n}\n\nexport default ContactList;"]},"metadata":{},"sourceType":"module"}