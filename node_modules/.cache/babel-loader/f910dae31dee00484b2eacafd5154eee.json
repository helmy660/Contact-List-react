{"ast":null,"code":"var _jsxFileName = \"/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js\";\nimport React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, Wrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n  constructor(props) {\n    super(props); // const contacts = Array.prototype.map.call(this.props.contacts, (contact, index) => {\n    //     if (index < 10) return contact\n    // })\n\n    this.onDeleteContact = id => {\n      console.log(id);\n      console.log(\"before filter in delete\", this.props.contacts);\n      console.log(\"before filter in delete\", this.state.arr);\n      let newContacts = Array.prototype.filter.call(this.state.arr, (contact, index) => {\n        return contact.id !== id;\n      });\n      console.log(\"after filter in delete\", newContacts);\n      this.setState({\n        arr: [...newContacts]\n      });\n    };\n\n    this.state = {\n      arr: []\n    };\n  } // componentWillReceiveProps(nextProps){\n  //     const newContacts = [...nextProps.contacts];\n  //     this.setState({arr: [...newContacts]});\n  // }\n\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, Array.prototype.map.call(this.state.arr, (contact, index) => {\n      return React.createElement(ContactItem, {\n        key: index,\n        contact: contact,\n        index: index,\n        onDeleteContact: this.onDeleteContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default ContactList;","map":{"version":3,"sources":["/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js"],"names":["React","Component","ContactItem","List","Wrapper","ContactList","constructor","props","onDeleteContact","id","console","log","contacts","state","arr","newContacts","Array","prototype","filter","call","contact","index","setState","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,oBAA9B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;AACA;;AAJe,SAgBnBC,eAhBmB,GAgBAC,EAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC,KAAKJ,KAAL,CAAWK,QAAjD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC,KAAKE,KAAL,CAAWC,GAAjD;AAEA,UAAIC,WAAW,GAAGC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4B,KAAKN,KAAL,CAAWC,GAAvC,EAA4C,CAACM,OAAD,EAAUC,KAAV,KAAmB;AAC7E,eAAOD,OAAO,CAACX,EAAR,KAAeA,EAAtB;AACH,OAFiB,CAAlB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCI,WAArC;AACA,WAAKO,QAAL,CAAc;AAACR,QAAAA,GAAG,EAAE,CAAC,GAAGC,WAAJ;AAAN,OAAd;AACH,KA1BkB;;AAKf,SAAKF,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAGH,GAV+B,CAYhC;AACA;AACA;AACA;;;AAeAS,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,KAAK,CAACC,SAAN,CAAgBO,GAAhB,CAAoBL,IAApB,CAAyB,KAAKN,KAAL,CAAWC,GAApC,EAAyC,CAACM,OAAD,EAAUC,KAAV,KAAoB;AAC1D,aAAO,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,KAAlB;AAAyB,QAAA,OAAO,EAAED,OAAlC;AAA2C,QAAA,KAAK,EAAEC,KAAlD;AAAyD,QAAA,eAAe,EAAE,KAAKb,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADL,CADJ,CADJ;AAUH;;AAzC+B;;AA4CpC,eAAeH,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, Wrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n\n    constructor(props) {\n        super(props);\n        // const contacts = Array.prototype.map.call(this.props.contacts, (contact, index) => {\n        //     if (index < 10) return contact\n        // })\n        this.state = {\n            arr: []\n        }\n    }\n\n    // componentWillReceiveProps(nextProps){\n    //     const newContacts = [...nextProps.contacts];\n    //     this.setState({arr: [...newContacts]});\n    // }\n\n\n    onDeleteContact = (id)=> {\n        console.log(id);\n        console.log(\"before filter in delete\",this.props.contacts);\n        console.log(\"before filter in delete\",this.state.arr);\n        \n        let newContacts = Array.prototype.filter.call(this.state.arr ,(contact, index)=> {\n            return contact.id !== id\n        })\n        console.log(\"after filter in delete\",newContacts);\n        this.setState({arr: [...newContacts]});\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <List>\n                    {Array.prototype.map.call(this.state.arr, (contact, index) => {\n                        return <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem>\n                    }\n                    )}\n                </List>\n            </Wrapper>\n        );\n    }\n}\n\nexport default ContactList;"]},"metadata":{},"sourceType":"module"}