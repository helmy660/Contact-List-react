{"ast":null,"code":"var _jsxFileName = \"/home/ashraf/Desktop/contact-list-release2/src/components/ContactItem/ContactItem.js\";\nimport React, { Component } from 'react';\nimport { Wrapper, DeleteBtn, Card, Details, ContactDetails, ContactImage, ContactName } from \"./ContactItemStyle\";\nimport DetailsModal from \"../DetailsModal/DetailsModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass ContactItem extends Component {\n  // To implement the swipe functionality, need a direct reference to the DOM element.\n  // Save a reference by using the ref attribute\n  // listElement;\n  // deleteElement;\n  // listElement = null;\n  // deleteElement = null;\n  constructor(props) {\n    super(props);\n\n    this.onDragStart = x => {\n      this.setState({\n        isDragged: true,\n        startX: x\n      });\n      this.startTime = Date.now(); //use requestAnimationFrame(callback) to tell the browser to perform an animation\n      //it requests that the browser calls a specified function to update an animation\n      // requestAnimationFrame(this.updatePosition);\n    };\n\n    this.onDragEnd = () => {\n      if (this.state.isDragged) {\n        this.setState({\n          isDragged: false\n        });\n\n        if (this.state.left < -66) {\n          if (!this.state.isSwiped) {\n            this.deleteElement.style.transform = `translateX(${0}px)`;\n            this.setState({\n              left: -66,\n              isSwiped: true\n            }, () => {\n              this.listElement.style.transform = `translateX(${0}px)`;\n            });\n          }\n        } else {\n          if (!this.state.isSwiped) {\n            this.setState({\n              left: 0\n            });\n            this.listElement.style.transform = `translateX(${this.state.left}px)`;\n          }\n        }\n      }\n    };\n\n    this.onDragStartMouse = e => {\n      this.onDragStart(e.clientX);\n      window.addEventListener(\"mousemove\", this.onMouseMove);\n    };\n\n    this.onDragEndMouse = e => {\n      window.removeEventListener(\"mousemove\", this.onMouseMove);\n      this.onDragEnd();\n    };\n\n    this.onDragStartTouch = e => {\n      const touch = e.targetTouches[0];\n      this.onDragStart(touch.clientX);\n      window.addEventListener(\"touchmove\", this.onTouchMove);\n    };\n\n    this.onDragEndTouch = e => {\n      window.removeEventListener(\"touchmove\", this.onTouchMove);\n      this.onDragEnd();\n    };\n\n    this.onMouseMove = e => {\n      const left = e.clientX - this.state.startX;\n\n      if (left < 0) {\n        this.setState({\n          left: left\n        });\n      }\n    };\n\n    this.onTouchMove = e => {\n      const touch = e.targetTouches[0];\n      const left = touch.clientX - this.state.startX;\n\n      if (left < 0) {\n        this.setState({\n          left: left\n        });\n      }\n    };\n\n    this.onSwiped = () => {\n      if (this.props.onSwipe) {\n        this.props.onSwipe();\n      }\n    };\n\n    this.onClicked = () => {\n      if (this.props.onSwipe) {\n        this.props.onSwipe();\n      }\n    };\n\n    this.updatePosition = () => {\n      if (this.state.isDragged) {\n        requestAnimationFrame(this.updatePosition);\n      }\n\n      const time = Date.now();\n      const elapsedTime = time - this.startTime;\n\n      if (this.state.isDragged && elapsedTime > 1000 / 60) {\n        this.listElement.style.transform = `translateX(${this.state.left}px)`;\n        this.deleteElement.style.transform = `translateX(${this.state.left}px)`;\n        this.startTime = Date.now();\n      }\n    };\n\n    this.showDetails = contactDetails => {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n      console.log(\"clicked a card\", contactDetails);\n    };\n\n    this.state = {\n      contact: this.props.contact,\n      isDragged: false,\n      isToggleOn: false,\n      isSwiped: false,\n      startX: 0,\n      left: 0\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.onDragEndMouse);\n    window.addEventListener(\"touchend\", this.onDragEndTouch);\n  }\n\n  componentWillUnmount() {// window.removeEventListener(\"mouseup\", this.onDragEndMouse);\n    // window.removeEventListener(\"touchend\".this.onDragEndTouch);\n    // console.log(\"test1\",this.listElement.parentNode)\n    // console.log(\"test2\",this.listElement.parentNode.parentNode)\n    // console.log(\"test3\",this.listElement.parentNode.parentNode.parentNode)\n    // this.listElement.parentNode.parentNode.parentNode.removeChild(this.listElement.parentNode.parentNode)\n    // this.deleteElement.parentNode.parentNode.removeChild(this.deleteElement.parentNode)\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.isToggleOn && React.createElement(DetailsModal, {\n      contact: this.state.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Card, {\n      ref: div => {\n        this.listElement = div;\n      },\n      status: this.state.isSwiped,\n      onClick: this.onClicked,\n      onDoubleClick: this.showDetails.bind(this, this.state.contact),\n      onMouseDown: this.onDragStartMouse,\n      onTouchStart: this.onDragStartTouch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(ContactImage, {\n      src: this.state.contact.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(ContactName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.contact.first_name, \" \", this.state.contact.last_name), React.createElement(ContactDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.contact.phone), React.createElement(ContactDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.contact.company))), React.createElement(DeleteBtn, {\n      style: {\n        color: \"#ce363c\",\n        fontSize: \"24px\"\n      },\n      ref: div => this.deleteElement = div,\n      onClick: () => this.props.onDeleteContact(this.state.contact.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ContactItem;","map":{"version":3,"sources":["/home/ashraf/Desktop/contact-list-release2/src/components/ContactItem/ContactItem.js"],"names":["React","Component","Wrapper","DeleteBtn","Card","Details","ContactDetails","ContactImage","ContactName","DetailsModal","FontAwesomeIcon","faTrash","ContactItem","constructor","props","onDragStart","x","setState","isDragged","startX","startTime","Date","now","onDragEnd","state","left","isSwiped","deleteElement","style","transform","listElement","onDragStartMouse","e","clientX","window","addEventListener","onMouseMove","onDragEndMouse","removeEventListener","onDragStartTouch","touch","targetTouches","onTouchMove","onDragEndTouch","onSwiped","onSwipe","onClicked","updatePosition","requestAnimationFrame","time","elapsedTime","showDetails","contactDetails","isToggleOn","console","log","contact","componentDidMount","componentWillUnmount","render","div","bind","image_url","first_name","last_name","phone","company","color","fontSize","onDeleteContact","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Wrapper, DeleteBtn, Card, Details, ContactDetails, ContactImage, ContactName } from \"./ContactItemStyle\";\nimport DetailsModal from \"../DetailsModal/DetailsModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass ContactItem extends Component {\n    // To implement the swipe functionality, need a direct reference to the DOM element.\n    // Save a reference by using the ref attribute\n    // listElement;\n    // deleteElement;\n    startTime;\n    // listElement = null;\n    // deleteElement = null;\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            contact: this.props.contact,\n            isDragged: false,\n            isToggleOn: false,\n            isSwiped: false,\n            startX: 0,\n            left: 0,\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.onDragEndMouse);\n        window.addEventListener(\"touchend\", this.onDragEndTouch);\n    }\n\n    componentWillUnmount() {\n        // window.removeEventListener(\"mouseup\", this.onDragEndMouse);\n        // window.removeEventListener(\"touchend\".this.onDragEndTouch);\n        // console.log(\"test1\",this.listElement.parentNode)\n        // console.log(\"test2\",this.listElement.parentNode.parentNode)\n        // console.log(\"test3\",this.listElement.parentNode.parentNode.parentNode)\n        // this.listElement.parentNode.parentNode.parentNode.removeChild(this.listElement.parentNode.parentNode)\n        // this.deleteElement.parentNode.parentNode.removeChild(this.deleteElement.parentNode)\n    }\n\n    onDragStart = (x) => {\n        this.setState({isDragged: true, startX: x});\n        this.startTime = Date.now();\n        //use requestAnimationFrame(callback) to tell the browser to perform an animation\n        //it requests that the browser calls a specified function to update an animation\n        // requestAnimationFrame(this.updatePosition);\n    }\n\n    onDragEnd = () => {\n        if(this.state.isDragged){\n            this.setState({isDragged: false});\n            if(this.state.left < -66){\n                if(!this.state.isSwiped){\n                    this.deleteElement.style.transform = `translateX(${0}px)`;\n                    this.setState({left: -66,isSwiped: true},()=>{\n                        this.listElement.style.transform = `translateX(${0}px)`;\n                    });\n                }\n            } else {\n                if(!this.state.isSwiped){\n                    this.setState({left:0});\n                    this.listElement.style.transform = `translateX(${this.state.left}px)`;\n                }\n            }\n        }\n    }\n\n    onDragStartMouse = (e) => {\n        this.onDragStart(e.clientX);\n        window.addEventListener(\"mousemove\",this.onMouseMove);\n    }\n\n    onDragEndMouse = (e) => {\n        window.removeEventListener(\"mousemove\",this.onMouseMove);\n        this.onDragEnd();\n    }\n\n    onDragStartTouch = (e) => {\n        const touch = e.targetTouches[0];\n        this.onDragStart(touch.clientX);\n        window.addEventListener(\"touchmove\",this.onTouchMove);\n    }\n\n    onDragEndTouch = (e) => {\n        window.removeEventListener(\"touchmove\",this.onTouchMove);\n        this.onDragEnd();\n    }\n\n    onMouseMove = (e) => {\n        const left = e.clientX - this.state.startX;\n        if(left<0){\n            this.setState({left: left});\n        }\n    }\n\n    onTouchMove = (e) => {\n        const touch = e.targetTouches[0];\n        const left = touch.clientX - this.state.startX;\n        if(left<0){\n            this.setState({left: left});\n        }\n    }\n\n    onSwiped = () => {\n        if(this.props.onSwipe) {\n            this.props.onSwipe();\n        }\n    }\n\n    onClicked = () => {\n        if(this.props.onSwipe) {\n            this.props.onSwipe();\n        }\n    }\n\n    updatePosition = () => {\n        if(this.state.isDragged) {\n            requestAnimationFrame(this.updatePosition);\n        }\n\n        const time = Date.now();\n        const elapsedTime = time - this.startTime; \n\n        if(this.state.isDragged && (elapsedTime > 1000/60)) {\n            this.listElement.style.transform = `translateX(${this.state.left}px)`;\n            this.deleteElement.style.transform = `translateX(${this.state.left}px)`;\n            this.startTime = Date.now();\n        }\n    }\n\n    showDetails = (contactDetails) => {\n        this.setState(state => ({\n            isToggleOn: !state.isToggleOn\n        }));\n        console.log(\"clicked a card\",contactDetails);\n    }\n    \n    \n    render() {\n        return (\n            <Wrapper>\n                {\n                    this.state.isToggleOn && <DetailsModal contact={this.state.contact}></DetailsModal>\n                }\n                <Card\n                    ref = {div => {this.listElement = div}}\n                    status = {this.state.isSwiped}\n                    onClick = {this.onClicked}\n                    onDoubleClick = {this.showDetails.bind(this,this.state.contact)}\n                    onMouseDown = {this.onDragStartMouse}\n                    onTouchStart = {this.onDragStartTouch}\n                >\n                    <ContactImage src={this.state.contact.image_url}></ContactImage>    \n                    <Details>\n                        <ContactName>{this.state.contact.first_name} {this.state.contact.last_name}</ContactName>\n                        <ContactDetails>{this.state.contact.phone}</ContactDetails>\n                        <ContactDetails>{this.state.contact.company}</ContactDetails>                            \n                    </Details>\n                </Card>\n\n                <DeleteBtn\n                    style={{color:\"#ce363c\",fontSize: \"24px\"}}\n                    ref = {div => (this.deleteElement = div)} \n                    onClick={()=>this.props.onDeleteContact(this.state.contact.id)}\n                >\n                    <FontAwesomeIcon icon={faTrash} />\n                </DeleteBtn>\n            </Wrapper>\n        );\n    }\n}\n\nexport default ContactItem;"]},"metadata":{},"sourceType":"module"}