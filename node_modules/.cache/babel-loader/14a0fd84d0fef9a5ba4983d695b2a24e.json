{"ast":null,"code":"var _jsxFileName = \"/home/ashraf/Desktop/contact-list-release2/src/components/ContactItem/ContactItem.js\";\nimport React, { Component } from 'react';\nimport { Wrapper, DeleteBtn, Card, SwipedCard, Details, ContactDetails, ContactImage, ContactName } from \"./ContactItemStyle\";\nimport DetailsModal from \"../DetailsModal/DetailsModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nclass ContactItem extends Component {\n  // To implement the swipe functionality, need a direct reference to the DOM element.\n  // Save a reference by using the ref attribute\n  constructor(props) {\n    super(props);\n    this.background = null;\n    this.listElement = null;\n    this.deleteElement = null;\n    this.wrapper = null;\n\n    this.onDragStart = x => {\n      this.setState({\n        isDragged: true,\n        startX: x\n      });\n      this.setState({\n        status: \"Card\"\n      });\n      this.startTime = Date.now();\n      requestAnimationFrame(this.updatePosition);\n    };\n\n    this.onDragEnd = () => {\n      if (this.state.isDragged) {\n        this.setState({\n          isDragged: false\n        });\n\n        if (this.state.left < -66) {\n          if (!this.state.isSwiped) {\n            this.deleteElement.style.transform = `translateX(${0}px)`;\n            this.setState({\n              left: -66,\n              isSwiped: true\n            }, () => {\n              this.listElement.style.transform = `translateX(${0}px)`;\n            });\n          }\n        } else {\n          if (!this.state.isSwiped) {\n            this.setState({\n              left: 0\n            });\n            this.listElement.style.transform = `translateX(${this.state.left}px)`;\n          }\n        }\n      }\n    };\n\n    this.onDragStartMouse = e => {\n      this.onDragStart(e.clientX);\n      window.addEventListener(\"mousemove\", this.onMouseMove);\n    };\n\n    this.onDragEndMouse = e => {\n      window.removeEventListener(\"mousemove\", this.onMouseMove);\n      this.onDragEnd();\n    };\n\n    this.onDragStartTouch = e => {\n      const touch = e.targetTouches[0];\n      this.onDragStart(touch.clientX);\n      window.addEventListener(\"touchmove\", this.onTouchMove);\n    };\n\n    this.onDragEndTouch = e => {\n      window.removeEventListener(\"touchmove\", this.onTouchMove);\n      this.onDragEnd();\n    };\n\n    this.onMouseMove = e => {\n      const left = e.clientX - this.state.startX;\n\n      if (left < 0) {\n        this.setState({\n          left: left\n        });\n      }\n    };\n\n    this.onTouchMove = e => {\n      const touch = e.targetTouches[0];\n      const left = touch.clientX - this.state.startX;\n\n      if (left < 0) {\n        this.setState({\n          left: left\n        });\n      }\n    };\n\n    this.onSwiped = () => {\n      if (this.props.onSwipe) {\n        this.props.onSwipe();\n      }\n    };\n\n    this.onClicked = () => {\n      if (this.props.onSwipe) {\n        this.props.onSwipe();\n      }\n    };\n\n    this.updatePosition = () => {\n      if (this.state.isDragged) {\n        requestAnimationFrame(this.updatePosition);\n      }\n\n      const time = Date.now();\n      const elapsedTime = time - this.startTime;\n\n      if (this.state.isDragged && elapsedTime > 1000 / 60) {\n        this.listElement.style.transform = `translateX(${this.state.left}px)`;\n        this.deleteElement.style.transform = `translateX(${this.state.left}px)`;\n        this.startTime = Date.now();\n      }\n    };\n\n    this.showDetails = contactDetails => {\n      this.setState(state => ({\n        isToggleOn: !state.isToggleOn\n      }));\n      console.log(\"clicked a card\", contactDetails);\n    };\n\n    this.state = {\n      contact: this.props.contact,\n      status: \"Card\",\n      startX: 0,\n      left: 0,\n      isDragged: false,\n      isToggleOn: false,\n      isSwiped: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", this.onDragEndMouse);\n    window.addEventListener(\"touchend\", this.onDragEndTouch);\n  }\n\n  componentWillUnmount() {// window.removeEventListener(\"mouseup\", this.onDragEndMouse);\n    // window.removeEventListener(\"touchend\".this.onDragEndTouch);\n    // this.listElement.  = null;\n    // this.deleteElement.div.ref = null;\n    // console.log(\"test uuuu\",this.listElement)\n    // elem.parentNode.removeChild(elem);\n    // console.log(\"test ubdxjkneiuc\",this.listElement.parentNode)\n    // console.log(\"test0\",this.wrapper);\n    // console.log(\"test1\",this.listElement.parentNode)\n    // console.log(\"test2\",this.listElement.parentNode.parentNode)\n    // console.log(\"test3\",this.listElement.parentNode.parentNode.parentNode)\n    // this.wrapper.reomveChild(this.listElement);\n    // this.listElement.parentNode.parentNode.parentNode.removeChild(this.listElement.parentNode.parentNode)\n    // this.wrapper.parentNode.style.display='none'\n    // this.deleteElement.parentNode.parentNode.removeChild(this.deleteElement.parentNode)\n    // console.log(\"test vvvvv\",this.listElement)\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.isToggleOn && React.createElement(DetailsModal, {\n      contact: this.state.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(Card, {\n      ref: div => {\n        this.listElement = div;\n      },\n      status: this.state.isSwiped,\n      onClick: this.onClicked,\n      onDoubleClick: this.showDetails.bind(this, this.state.contact),\n      onMouseDown: this.onDragStartMouse,\n      onTouchStart: this.onDragStartTouch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(ContactImage, {\n      src: this.state.contact.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(ContactName, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.contact.first_name, \" \", this.state.contact.last_name), React.createElement(ContactDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.contact.phone), React.createElement(ContactDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.state.contact.company))), React.createElement(DeleteBtn, {\n      style: {\n        color: \"#c8565a\",\n        fontSize: \"24px\"\n      },\n      ref: div => this.deleteElement = div,\n      onClick: () => this.props.onDeleteContact(this.state.contact.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ContactItem;","map":{"version":3,"sources":["/home/ashraf/Desktop/contact-list-release2/src/components/ContactItem/ContactItem.js"],"names":["React","Component","Wrapper","DeleteBtn","Card","SwipedCard","Details","ContactDetails","ContactImage","ContactName","DetailsModal","FontAwesomeIcon","faTrash","ContactItem","constructor","props","background","listElement","deleteElement","wrapper","onDragStart","x","setState","isDragged","startX","status","startTime","Date","now","requestAnimationFrame","updatePosition","onDragEnd","state","left","isSwiped","style","transform","onDragStartMouse","e","clientX","window","addEventListener","onMouseMove","onDragEndMouse","removeEventListener","onDragStartTouch","touch","targetTouches","onTouchMove","onDragEndTouch","onSwiped","onSwipe","onClicked","time","elapsedTime","showDetails","contactDetails","isToggleOn","console","log","contact","componentDidMount","componentWillUnmount","render","div","bind","image_url","first_name","last_name","phone","company","color","fontSize","onDeleteContact","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Wrapper, DeleteBtn, Card, SwipedCard, Details, ContactDetails, ContactImage, ContactName } from \"./ContactItemStyle\";\nimport DetailsModal from \"../DetailsModal/DetailsModal\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nclass ContactItem extends Component {\n    // To implement the swipe functionality, need a direct reference to the DOM element.\n    // Save a reference by using the ref attribute\n    listElement;\n    deleteElement;\n    background;\n    wrapper;\n    startTime;\n\n    background = null;\n    listElement = null;\n    deleteElement = null;\n    wrapper = null;\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            contact: this.props.contact,\n            status: \"Card\",\n            startX: 0,\n            left: 0,\n            isDragged: false,\n            isToggleOn: false,\n            isSwiped: false,\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.onDragEndMouse);\n        window.addEventListener(\"touchend\", this.onDragEndTouch);\n    }\n\n    componentWillUnmount() {\n        // window.removeEventListener(\"mouseup\", this.onDragEndMouse);\n        // window.removeEventListener(\"touchend\".this.onDragEndTouch);\n        // this.listElement.  = null;\n        // this.deleteElement.div.ref = null;\n        // console.log(\"test uuuu\",this.listElement)\n        // elem.parentNode.removeChild(elem);\n        // console.log(\"test ubdxjkneiuc\",this.listElement.parentNode)\n        // console.log(\"test0\",this.wrapper);\n\n        // console.log(\"test1\",this.listElement.parentNode)\n        // console.log(\"test2\",this.listElement.parentNode.parentNode)\n        // console.log(\"test3\",this.listElement.parentNode.parentNode.parentNode)\n\n        // this.wrapper.reomveChild(this.listElement);\n        // this.listElement.parentNode.parentNode.parentNode.removeChild(this.listElement.parentNode.parentNode)\n        // this.wrapper.parentNode.style.display='none'\n        // this.deleteElement.parentNode.parentNode.removeChild(this.deleteElement.parentNode)\n        // console.log(\"test vvvvv\",this.listElement)\n\n    }\n\n    onDragStart = (x) => {\n        this.setState({isDragged: true, startX: x});\n        this.setState({status: \"Card\"});\n        this.startTime = Date.now();\n        requestAnimationFrame(this.updatePosition);\n    }\n\n    onDragEnd = () => {\n        if(this.state.isDragged){\n            this.setState({isDragged: false});\n            if(this.state.left < -66){\n                if(!this.state.isSwiped){\n                    this.deleteElement.style.transform = `translateX(${0}px)`;\n                    this.setState({left: -66,isSwiped: true},()=>{\n                        this.listElement.style.transform = `translateX(${0}px)`;\n                    });\n                }\n            } else {\n                if(!this.state.isSwiped){\n                    this.setState({left:0});\n                    this.listElement.style.transform = `translateX(${this.state.left}px)`;\n                }\n            }\n        }\n    }\n\n    onDragStartMouse = (e) => {\n        this.onDragStart(e.clientX);\n        window.addEventListener(\"mousemove\",this.onMouseMove);\n    }\n\n    onDragEndMouse = (e) => {\n        window.removeEventListener(\"mousemove\",this.onMouseMove);\n        this.onDragEnd();\n    }\n\n    onDragStartTouch = (e) => {\n        const touch = e.targetTouches[0];\n        this.onDragStart(touch.clientX);\n        window.addEventListener(\"touchmove\",this.onTouchMove);\n    }\n\n    onDragEndTouch = (e) => {\n        window.removeEventListener(\"touchmove\",this.onTouchMove);\n        this.onDragEnd();\n    }\n\n    onMouseMove = (e) => {\n        const left = e.clientX - this.state.startX;\n        if(left<0){\n            this.setState({left: left});\n        }\n    }\n\n    onTouchMove = (e) => {\n        const touch = e.targetTouches[0];\n        const left = touch.clientX - this.state.startX;\n        if(left<0){\n            this.setState({left: left});\n        }\n    }\n\n    onSwiped = () => {\n        if(this.props.onSwipe) {\n            this.props.onSwipe();\n        }\n    }\n\n    onClicked = () => {\n        if(this.props.onSwipe) {\n            this.props.onSwipe();\n        }\n    }\n\n    updatePosition = () => {\n        if(this.state.isDragged) {\n            requestAnimationFrame(this.updatePosition);\n        }\n\n        const time = Date.now();\n        const elapsedTime = time - this.startTime; \n\n        if(this.state.isDragged && (elapsedTime > 1000/60)) {\n            this.listElement.style.transform = `translateX(${this.state.left}px)`;\n            this.deleteElement.style.transform = `translateX(${this.state.left}px)`;\n            this.startTime = Date.now();\n        }\n    }\n\n    showDetails = (contactDetails) => {\n        this.setState(state => ({\n            isToggleOn: !state.isToggleOn\n        }));\n        console.log(\"clicked a card\",contactDetails);\n    }\n    \n    \n    render() {\n        return (\n            <Wrapper>\n                {\n                    this.state.isToggleOn && <DetailsModal contact={this.state.contact}></DetailsModal>\n                }\n                <Card\n                    ref = {div => {this.listElement = div}}\n                    status = {this.state.isSwiped}\n                    onClick = {this.onClicked}\n                    onDoubleClick = {this.showDetails.bind(this,this.state.contact)}\n                    onMouseDown = {this.onDragStartMouse}\n                    onTouchStart = {this.onDragStartTouch}\n                >\n                    <ContactImage src={this.state.contact.image_url}></ContactImage>    \n                    <Details>\n                        <ContactName>{this.state.contact.first_name} {this.state.contact.last_name}</ContactName>\n                        <ContactDetails>{this.state.contact.phone}</ContactDetails>\n                        <ContactDetails>{this.state.contact.company}</ContactDetails>                            \n                    </Details>\n                </Card>\n\n                <DeleteBtn\n                    style={{color:\"#c8565a\",fontSize: \"24px\"}}\n                    ref = {div => (this.deleteElement = div)} \n                    onClick={()=>this.props.onDeleteContact(this.state.contact.id)}\n                >\n                    <FontAwesomeIcon icon={faTrash} />\n                </DeleteBtn>\n            </Wrapper>\n        );\n    }\n}\n\nexport default ContactItem;"]},"metadata":{},"sourceType":"module"}