{"ast":null,"code":"import _objectSpread from \"/home/ashraf/Desktop/contact-list-release2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js\";\nimport React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, Wrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteContact = id => {\n      console.log(\"before filter in delete\", this.props.contacts);\n      let newContacts = Array.prototype.filter.call(this.state.arr, (contact, index) => {\n        if (index < 10) return contact.id !== id;\n      });\n      console.log(\"after filter in delete\", newContacts);\n      this.setState({\n        arr: newContacts\n      }, () => console.log(\"update state\"));\n      console.log(\"after delete: \", this.state.arr);\n    };\n\n    this.state = {\n      arr: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"nextprops:\", nextProps.contacts);\n\n    const newContacts = _objectSpread({}, nextProps.contacts);\n\n    this.setState({\n      arr: newContacts\n    });\n    console.log(this.state.arr);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, Array.prototype.map.call(this.state.arr, (contact, index) => {\n      if (index < 10) return React.createElement(ContactItem, {\n        key: index,\n        contact: contact,\n        index: index,\n        onDeleteContact: this.onDeleteContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default ContactList; // import React, { Component } from 'react';\n// import ContactItem from \"../ContactItem/ContactItem\";\n// import { List, Wrapper } from './ContactListStyle';\n// class ContactList extends Component {\n//     constructor(props) {\n//         super(props);\n//         // let arr = [];\n//         // Array.prototype.forEach.call(this.props.contacts,(item,index)=>{\n//         //     if(index <10) arr.push(item)\n//         // })\n//         // console.log(\"arr inside constructor: \",arr);\n//         this.state = {\n//             arr: []\n//         }\n//         console.log(\"state.arr inside constructor: \",this.state.arr);\n//     }\n//     // componentWillReceiveProps(nextProps){\n//     //     let arr = [];\n//     //     Array.prototype.map.call(nextProps.contacts,(item,index)=>{\n//     //         if(index <10) arr.push(item)\n//     //     })\n//     //     // Array.prototype.forEach.call(nextProps.contacts,(item,index)=>{\n//     //     //     if(index <10) arr.push(item)\n//     //     // })\n//     //     console.log(\"arr inside componentWillReceive: \",arr);\n//     //     this.setState({arr:arr});\n//     //     console.log(\"state.arr inside componentWillReceive: \",this.state.arr);\n//     // }\n//     onDeleteContact = (id)=> {\n//         console.log(id);\n//         let newContacts = this.state.arr.filter((contact)=>{\n//             return contact.id !== id\n//         })\n//         this.setState({arr:newContacts})\n//         console.log(\"after delete: \", this.state.arr);\n//     }\n//     render() {\n//         console.log(this.state.arr);\n//         return (\n//             <Wrapper>\n//                 <List>\n//                     {/* {Array.prototype.map.call(this.state.arr, (contact, index) => {\n//                         if (index < 10) return <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem>\n//                     }\n//                     )} */}\n//                     {\n//                         this.state.arr.map((contact, index) => \n//                         <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem> \n//                     )\n//                     }\n//                 </List>\n//             </Wrapper>\n//         );\n//     }\n// }\n// export default ContactList;","map":{"version":3,"sources":["/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js"],"names":["React","Component","ContactItem","List","Wrapper","ContactList","constructor","props","onDeleteContact","id","console","log","contacts","newContacts","Array","prototype","filter","call","state","arr","contact","index","setState","componentWillReceiveProps","nextProps","render","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,oBAA9B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAenBC,eAfmB,GAeAC,EAAD,IAAO;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsC,KAAKJ,KAAL,CAAWK,QAAjD;AACA,UAAIC,WAAW,GAAGC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4B,KAAKC,KAAL,CAAWC,GAAvC,EAA4C,CAACC,OAAD,EAAUC,KAAV,KAAmB;AAC7E,YAAIA,KAAK,GAAG,EAAZ,EAAgB,OAAOD,OAAO,CAACX,EAAR,KAAeA,EAAtB;AACnB,OAFiB,CAAlB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCE,WAArC;AACA,WAAKS,QAAL,CAAc;AAACH,QAAAA,GAAG,EAACN;AAAL,OAAd,EAAgC,MAAKH,OAAO,CAACC,GAAR,CAAY,cAAZ,CAArC;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKO,KAAL,CAAWC,GAAzC;AACH,KAvBkB;;AAEf,SAAKD,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAGH;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChCd,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBa,SAAS,CAACZ,QAAnC;;AACA,UAAMC,WAAW,qBAAOW,SAAS,CAACZ,QAAjB,CAAjB;;AACA,SAAKU,QAAL,CAAc;AAACH,MAAAA,GAAG,EAAEN;AAAN,KAAd;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWC,GAAvB;AACH;;AAaDM,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKX,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAoBT,IAApB,CAAyB,KAAKC,KAAL,CAAWC,GAApC,EAAyC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1D,UAAIA,KAAK,GAAG,EAAZ,EAAgB,OAAO,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,KAAlB;AAAyB,QAAA,OAAO,EAAED,OAAlC;AAA2C,QAAA,KAAK,EAAEC,KAAlD;AAAyD,QAAA,eAAe,EAAE,KAAKb,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACnB,KAFA,CADL,CADJ,CADJ;AAUH;;AAtC+B;;AAyCpC,eAAeH,WAAf,C,CAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, Wrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            arr: []\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        console.log(\"nextprops:\",nextProps.contacts);\n        const newContacts = {...nextProps.contacts};\n        this.setState({arr: newContacts});\n        console.log(this.state.arr);\n    }\n\n\n    onDeleteContact = (id)=> {\n        console.log(\"before filter in delete\",this.props.contacts);\n        let newContacts = Array.prototype.filter.call(this.state.arr ,(contact, index)=> {\n            if (index < 10) return contact.id !== id\n        })\n        console.log(\"after filter in delete\",newContacts);\n        this.setState({arr:newContacts},()=> console.log(\"update state\"))\n        console.log(\"after delete: \", this.state.arr);\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <List>\n                    {Array.prototype.map.call(this.state.arr, (contact, index) => {\n                        if (index < 10) return <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem>\n                    }\n                    )}\n                </List>\n            </Wrapper>\n        );\n    }\n}\n\nexport default ContactList;\n\n\n// import React, { Component } from 'react';\n// import ContactItem from \"../ContactItem/ContactItem\";\n// import { List, Wrapper } from './ContactListStyle';\n\n// class ContactList extends Component {\n\n//     constructor(props) {\n//         super(props);\n//         // let arr = [];\n//         // Array.prototype.forEach.call(this.props.contacts,(item,index)=>{\n//         //     if(index <10) arr.push(item)\n//         // })\n//         // console.log(\"arr inside constructor: \",arr);\n//         this.state = {\n//             arr: []\n//         }\n//         console.log(\"state.arr inside constructor: \",this.state.arr);\n//     }\n\n//     // componentWillReceiveProps(nextProps){\n//     //     let arr = [];\n//     //     Array.prototype.map.call(nextProps.contacts,(item,index)=>{\n//     //         if(index <10) arr.push(item)\n//     //     })\n//     //     // Array.prototype.forEach.call(nextProps.contacts,(item,index)=>{\n//     //     //     if(index <10) arr.push(item)\n//     //     // })\n//     //     console.log(\"arr inside componentWillReceive: \",arr);\n//     //     this.setState({arr:arr});\n//     //     console.log(\"state.arr inside componentWillReceive: \",this.state.arr);\n//     // }\n\n//     onDeleteContact = (id)=> {\n//         console.log(id);\n//         let newContacts = this.state.arr.filter((contact)=>{\n//             return contact.id !== id\n//         })\n//         this.setState({arr:newContacts})\n//         console.log(\"after delete: \", this.state.arr);\n//     }\n\n//     render() {\n//         console.log(this.state.arr);\n//         return (\n//             <Wrapper>\n//                 <List>\n//                     {/* {Array.prototype.map.call(this.state.arr, (contact, index) => {\n//                         if (index < 10) return <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem>\n//                     }\n//                     )} */}\n//                     {\n//                         this.state.arr.map((contact, index) => \n//                         <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem> \n//                     )\n//                     }\n//                 </List>\n//             </Wrapper>\n//         );\n//     }\n// }\n\n// export default ContactList;"]},"metadata":{},"sourceType":"module"}