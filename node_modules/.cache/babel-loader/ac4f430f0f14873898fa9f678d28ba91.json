{"ast":null,"code":"var _jsxFileName = \"/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js\";\nimport React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, Wrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteContact = id => {\n      let newContacts = this.state.arr.filter(contact => {\n        return contact.id !== id;\n      });\n      this.setState({\n        arr: newContacts\n      });\n    };\n\n    let arr = [];\n    Array.prototype.forEach.call(this.props.contacts, (item, index) => {\n      if (index < 10) arr.push(item);\n    });\n    this.state = {\n      arr: arr\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let arr = [];\n    Array.prototype.forEach.call(nextProps.contacts, (item, index) => {\n      if (index < 10) arr.push(item);\n    });\n    this.setState({\n      arr: arr\n    });\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.arr.map((contact, index) => React.createElement(ContactItem, {\n      key: index,\n      contact: contact,\n      index: index,\n      onDeleteContact: this.onDeleteContact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ContactList;","map":{"version":3,"sources":["/home/ashraf/Desktop/contact-list-release2/src/components/ContactList/ContactList.js"],"names":["React","Component","ContactItem","List","Wrapper","ContactList","constructor","props","onDeleteContact","id","newContacts","state","arr","filter","contact","setState","Array","prototype","forEach","call","contacts","item","index","push","componentWillReceiveProps","nextProps","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,oBAA9B;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,eAxBmB,GAwBAC,EAAD,IAAM;AACpB,UAAIC,WAAW,GAAE,KAAKC,KAAL,CAAWC,GAAX,CAAeC,MAAf,CAAuBC,OAAD,IAAW;AAC9C,eAAOA,OAAO,CAACL,EAAR,KAAeA,EAAtB;AACH,OAFgB,CAAjB;AAGA,WAAKM,QAAL,CAAc;AAACH,QAAAA,GAAG,EAACF;AAAL,OAAd;AACH,KA7BkB;;AAEf,QAAIE,GAAG,GAAG,EAAV;AAEII,IAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6B,KAAKZ,KAAL,CAAWa,QAAxC,EAAiD,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC3D,UAAGA,KAAK,GAAE,EAAV,EAAcV,GAAG,CAACW,IAAJ,CAASF,IAAT;AACjB,KAFD;AAIJ,SAAKV,KAAL,GAAa;AACTC,MAAAA,GAAG,EAACA;AADK,KAAb;AAIH;;AAEDY,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAIb,GAAG,GAAG,EAAV;AACII,IAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BM,SAAS,CAACL,QAAvC,EAAgD,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC1D,UAAGA,KAAK,GAAE,EAAV,EAAcV,GAAG,CAACW,IAAJ,CAASF,IAAT;AACjB,KAFD;AAGJ,SAAKN,QAAL,CAAc;AACVH,MAAAA,GAAG,EAACA;AADM,KAAd;AAGH;;AASDc,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMQ,KAAKf,KAAL,CAAWC,GAAX,CAAee,GAAf,CAAmB,CAACb,OAAD,EAAUQ,KAAV,KACnB,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,KAAlB;AAAyB,MAAA,OAAO,EAAER,OAAlC;AAA2C,MAAA,KAAK,EAAEQ,KAAlD;AAAyD,MAAA,eAAe,EAAE,KAAKd,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CANR,CADJ,CADJ;AAeH;;AAjD+B;;AAoDpC,eAAeH,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport { List, Wrapper } from './ContactListStyle';\n\nclass ContactList extends Component {\n\n    constructor(props) {\n        super(props);\n        let arr = [];\n        \n            Array.prototype.forEach.call(this.props.contacts,(item,index)=>{\n                if(index <10) arr.push(item)\n            })\n\n        this.state = {\n            arr:arr\n        }\n        \n    }\n\n    componentWillReceiveProps(nextProps){\n        let arr = [];\n            Array.prototype.forEach.call(nextProps.contacts,(item,index)=>{\n                if(index <10) arr.push(item)\n            })\n        this.setState({\n            arr:arr\n        })\n    }\n\n    onDeleteContact = (id)=>{\n        let newContacts =this.state.arr.filter((contact)=>{\n            return contact.id !== id\n        })\n        this.setState({arr:newContacts})\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <List>\n                    {/* {Array.prototype.map.call(this.state.arr, (contact, index) => {\n                        if (index < 10) return <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem>\n                    }\n                    )} */}\n                    {\n                        this.state.arr.map((contact, index) => \n                        <ContactItem key={index} contact={contact} index={index} onDeleteContact={this.onDeleteContact}></ContactItem> \n                    )\n                    }\n                </List>\n            </Wrapper>\n        );\n    }\n}\n\nexport default ContactList;"]},"metadata":{},"sourceType":"module"}